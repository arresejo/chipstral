0x0200	V[0xe] = 0x5
0x0202	V[0x5] = 0x0
0x0204	V[0xb] = 0x6
0x0206	V[0xa] = 0x0
0x0208	I = 0x30c
0x020a	draw_sprite(0xa, 0xb, 0x1)
0x020c	V[0xa] = (V[0xa] + 0x4) & 0xFF
0x020e	PC += 2 if V[0xa] == 0x40 else 0
0x0210	PC = 0x208
0x0212	V[0xb] = (V[0xb] + 0x1) & 0xFF
0x0214	PC += 2 if V[0xb] == 0x12 else 0
0x0216	PC = 0x206
0x0218	V[0xc] = 0x20
0x021a	V[0xd] = 0x1f
0x021c	I = 0x310
0x021e	draw_sprite(0xc, 0xd, 0x1)
0x0220	stack.append(PC); PC = 0x2f6
0x0222	V[0x0] = 0x0
0x0224	V[0x1] = 0x0
0x0226	I = 0x312
0x0228	draw_sprite(0x0, 0x1, 0x1)
0x022a	V[0x0] = (V[0x0] + 0x8) & 0xFF
0x022c	I = 0x30e
0x022e	draw_sprite(0x0, 0x1, 0x1)
0x0230	V[0x0] = 0x40
0x0232	DT = V[0x0]
0x0234	V[0x0] = DT
0x0236	PC += 2 if V[0x0] == 0x0 else 0
0x0238	PC = 0x234
0x023a	V[0x6] = random.randint(0, 255) & 0xf
0x023c	V[0x7] = 0x1e
0x023e	V[0x8] = 0x1
0x0240	V[0x9] = 0xff
0x0242	I = 0x30e
0x0244	draw_sprite(0x6, 0x7, 0x1)
0x0246	I = 0x310
0x0248	draw_sprite(0xc, 0xd, 0x1)
0x024a	V[0x0] = 0x4
0x024c	PC += 2 if not keys[V[0x0]] else 0
0x024e	V[0xc] = (V[0xc] + 0xfe) & 0xFF
0x0250	V[0x0] = 0x6
0x0252	PC += 2 if not keys[V[0x0]] else 0
0x0254	V[0xc] = (V[0xc] + 0x2) & 0xFF
0x0256	V[0x0] = 0x3f
0x0258	V[0xc] = V[0xc] & V[0x0]
0x025a	draw_sprite(0xc, 0xd, 0x1)
0x025c	I = 0x30e
0x025e	draw_sprite(0x6, 0x7, 0x1)
0x0260	result = V[0x6] + V[0x8]; V[0x6] = result & 0xFF; V[0xF] = 1 if result > 0xFF else 0; 
0x0262	result = V[0x7] + V[0x9]; V[0x7] = result & 0xFF; V[0xF] = 1 if result > 0xFF else 0; 
0x0264	V[0x0] = 0x3f
0x0266	V[0x6] = V[0x6] & V[0x0]
0x0268	V[0x1] = 0x1f
0x026a	V[0x7] = V[0x7] & V[0x1]
0x026c	PC += 2 if V[0x7] != 0x1f else 0
0x026e	PC = 0x2ac
0x0270	PC += 2 if V[0x6] != 0x0 else 0
0x0272	V[0x8] = 0x1
0x0274	PC += 2 if V[0x6] != 0x3f else 0
0x0276	V[0x8] = 0xff
0x0278	PC += 2 if V[0x7] != 0x00 else 0
0x027a	V[0x9] = 0x1
0x027c	draw_sprite(0x6, 0x7, 0x1)
0x027e	PC += 2 if V[0xf] == 0x1 else 0
0x0280	PC = 0x2aa
0x0282	PC += 2 if V[0x7] != 0x1f else 0
0x0284	PC = 0x2aa
0x0286	V[0x0] = 0x5
0x0288	borrow = 1 if V[0x0] >= V[0x7] else 0; V[0x0] = (V[0x0] - V[0x7]) & 0xFF; V[0xF] = borrow
0x028a	PC += 2 if V[0xf] == 0x00 else 0
0x028c	PC = 0x2aa
0x028e	V[0x0] = 0x1
0x0290	ST = V[0x0]
0x0292	V[0x0] = V[0x6]
0x0294	V[0x1] = 0xfc
0x0296	V[0x0] = V[0x0] & V[0x1]
0x0298	I = 0x30c
0x029a	draw_sprite(0x0, 0x7, 0x1)
0x029c	V[0x0] = 0xfe
0x029e	V[0x9] = V[0x9] ^ V[0x0]
0x02a0	stack.append(PC); PC = 0x2f6
0x02a2	V[0x5] = (V[0x5] + 0x1) & 0xFF
0x02a4	stack.append(PC); PC = 0x2f6
0x02a6	PC += 2 if V[0x5] != 0xc0 else 0
0x02a8	PC = 0x318
0x02aa	PC = 0x246
0x02ac	V[0x9] = 0xff
0x02ae	V[0x0] = V[0x6]
0x02b0	borrow = 1 if V[0x0] >= V[0xc] else 0; V[0x0] = (V[0x0] - V[0xc]) & 0xFF; V[0xF] = borrow
0x02b2	PC += 2 if V[0xf] == 0x1 else 0
0x02b4	PC = 0x2ca
0x02b6	V[0x1] = 0x2
0x02b8	borrow = 1 if V[0x0] >= V[0x1] else 0; V[0x0] = (V[0x0] - V[0x1]) & 0xFF; V[0xF] = borrow
0x02ba	PC += 2 if V[0xf] == 0x1 else 0
0x02bc	PC = 0x2e0
0x02be	borrow = 1 if V[0x0] >= V[0x1] else 0; V[0x0] = (V[0x0] - V[0x1]) & 0xFF; V[0xF] = borrow
0x02c0	PC += 2 if V[0xf] == 0x1 else 0
0x02c2	PC = 0x2ee
0x02c4	borrow = 1 if V[0x0] >= V[0x1] else 0; V[0x0] = (V[0x0] - V[0x1]) & 0xFF; V[0xF] = borrow
0x02c6	PC += 2 if V[0xf] == 0x1 else 0
0x02c8	PC = 0x2e8
0x02ca	V[0x0] = 0x20
0x02cc	ST = V[0x0]
0x02ce	I = 0x30e
0x02d0	V[0xe] = (V[0xe] + 0xff) & 0xFF
0x02d2	V[0x0] = V[0xe]
0x02d4	result = V[0x0] + V[0x0]; V[0x0] = result & 0xFF; V[0xF] = 1 if result > 0xFF else 0; 
0x02d6	V[0x1] = 0x0
0x02d8	draw_sprite(0x0, 0x1, 0x1)
0x02da	PC += 2 if V[0xe] == 0x00 else 0
0x02dc	PC = 0x230
0x02de	PC = 0x2de
0x02e0	V[0x8] = (V[0x8] + 0xff) & 0xFF
0x02e2	PC += 2 if V[0x8] != 0xfe else 0
0x02e4	V[0x8] = 0xff
0x02e6	PC = 0x2ee
0x02e8	V[0x8] = (V[0x8] + 0x1) & 0xFF
0x02ea	PC += 2 if V[0x8] != 0x2 else 0
0x02ec	V[0x8] = 0x1
0x02ee	V[0x0] = 0x4
0x02f0	ST = V[0x0]
0x02f2	V[0x9] = 0xff
0x02f4	PC = 0x270
0x02f6	I = 0x314
0x02f8	value = V[0x5]; memory[I] = value // 100; memory[I + 1] = (value // 10) % 10; memory[I + 2] = value % 10
0x02fa	V[:0x2 + 1] = memory[I:I + 0x2 + 1]
0x02fc	I = (V[0x1] & 0x0F) * 5
0x02fe	V[0x3] = 0x37
0x0300	V[0x4] = 0x0
0x0302	draw_sprite(0x3, 0x4, 0x5)
0x0304	V[0x3] = (V[0x3] + 0x5) & 0xFF
0x0306	I = (V[0x2] & 0x0F) * 5
0x0308	draw_sprite(0x3, 0x4, 0x5)
0x030a	PC = stack.pop()
0x030c	DB 0xf0
0x030d	DB 0x00
0x030e	DB 0x80
0x030f	DB 0x00
0x0310	DB 0xfc
0x0311	DB 0x00
0x0312	DB 0xaa
0x0313	DB 0x00
0x0314	DB 0x00
0x0315	DB 0x00
0x0316	DB 0x00
0x0317	DB 0x00
0x0318	V[0xe] = 0x5
0x031a	display.clear()
0x031c	PC = 0x204
