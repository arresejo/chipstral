: sprite1 0x15 0x15 0x3F 0xE0 0x20 0xE0 0x20 0xE0 0x20 0xE0 0x20 0xE0 0x3F 0x15 0x15
: sprite2 0x54 0x54 0xFE 0x03 0x02 0x03 0x02 0x03 0x02 0x03 0x02 0x03 0xFE 0x54 0x54
: sprite3 0x00 0x06 0x08 0x88 0x08 0x86 0x00 0x80 0x00 0x80 0x00 0x80 0x00 0x00 0x00
: sprite4 0x00 0xAB 0xA2 0xEB 0xAA 0xAA 0x00 0x00 0x00 0x02 0x02 0x02 0x01 0x01 0x00
: sprite5 0x00 0x9B 0xA1 0x91 0x09 0x31 0x00 0x00 0x00 0x90 0xB0 0x90 0x10 0x3A 0x00
: sprite6 0x00 0xB1 0x2A 0x33 0x2A 0x2A 0x00 0x00 0x00 0x40 0xA0 0xA0 0xA0 0x40 0x00
: sprite7 0x00 0x20 0xA0 0xA0 0xA0 0xB8 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: mistral 0x88 0xD8 0xF8 0xA8 0x88 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	
: draw-screen
	v0 := 5
	v1 := 9
	v2 := 0
	v3 := 15
	i := sprite1
	loop
		sprite v0 v1 15
		v0 +=  8
		v2 +=  1
		i  += v3
		if v2 != 7 then
	again
;

: main
	clear
	draw-screen
	v0 := 20
	buzzer := v0

  v1 := 11
  v2 := 14
  i  := mistral
  sprite v1 v2 15

  loop
    sprite v1 v2 15
    v0 := OCTO_KEY_W if v0 key then v2 += -1
    v0 := OCTO_KEY_S if v0 key then v2 +=  1
    v0 := OCTO_KEY_A if v0 key then v1 += -1
    v0 := OCTO_KEY_D if v0 key then v1 +=  1
    sprite v1 v2 15
    loop
      vf := delay
      if vf != 0 then
    again
    vf := 3
    delay := vf
  again