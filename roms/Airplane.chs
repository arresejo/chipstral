0x0200	V[0xa] = 0x00
0x0202	V[0xb] = 0x4
0x0204	V[0xc] = 0x1
0x0206	V[0xd] = 0x0
0x0208	V[0xe] = 0x2
0x020a	stack.append(PC); PC = 0x326
0x020c	stack.append(PC); PC = 0x320
0x020e	V[0x0] = 0x30
0x0210	V[0x1] = 0x1
0x0212	DT = V[0x0]
0x0214	V[0x0] = DT
0x0216	ST = V[0x1]
0x0218	PC += 2 if V[0x0] == 0x0 else 0
0x021a	PC = 0x214
0x021c	stack.append(PC); PC = 0x242
0x021e	stack.append(PC); PC = 0x320
0x0220	V[0xd] = (V[0xd] + 0x1) & 0xFF
0x0222	stack.append(PC); PC = 0x320
0x0224	V[0x0] = 0x8
0x0226	PC += 2 if not keys[V[0x0]] else 0
0x0228	stack.append(PC); PC = 0x30a
0x022a	PC += 2 if V[0xa] != 0x00 else 0
0x022c	PC = 0x23e
0x022e	I = 0x362
0x0230	draw_sprite(0x8, 0x9, 0x1)
0x0232	V[0x9] = (V[0x9] + 0x1) & 0xFF
0x0234	draw_sprite(0x8, 0x9, 0x1)
0x0236	PC += 2 if V[0xf] != 0x1 else 0
0x0238	PC = 0x2f4
0x023a	PC += 2 if V[0x9] != 0x18 else 0
0x023c	PC = 0x2e4
0x023e	stack.append(PC); PC = 0x2b2
0x0240	PC = 0x21e
0x0242	PC += 2 if V[0xc] != 0x1 else 0
0x0244	stack.append(PC); PC = 0x26c
0x0246	PC += 2 if V[0xc] != 0x2 else 0
0x0248	stack.append(PC); PC = 0x27a
0x024a	PC += 2 if V[0xc] != 0x3 else 0
0x024c	stack.append(PC); PC = 0x288
0x024e	PC += 2 if V[0xc] != 0x4 else 0
0x0250	stack.append(PC); PC = 0x296
0x0252	PC += 2 if V[0xc] != 0x5 else 0
0x0254	stack.append(PC); PC = 0x2a4
0x0256	I = 0x359
0x0258	draw_sprite(0x6, 0x7, 0x2)
0x025a	PC += 2 if V[0x4] != 0x0 else 0
0x025c	PC = stack.pop()
0x025e	I = 0x357
0x0260	draw_sprite(0x4, 0x5, 0x2)
0x0262	PC += 2 if V[0x2] != 0x00 else 0
0x0264	PC = stack.pop()
0x0266	I = 0x35b
0x0268	draw_sprite(0x2, 0x3, 0x2)
0x026a	PC = stack.pop()
0x026c	V[0x6] = 0x28
0x026e	V[0x7] = 0x9
0x0270	V[0x4] = 0x0
0x0272	V[0x5] = 0x0
0x0274	V[0x2] = 0x0
0x0276	V[0x3] = 0x0
0x0278	PC = stack.pop()
0x027a	V[0x6] = 0x28
0x027c	V[0x7] = 0xe
0x027e	V[0x4] = 0x28
0x0280	V[0x5] = 0x14
0x0282	V[0x2] = 0x0
0x0284	V[0x3] = 0x0
0x0286	PC = stack.pop()
0x0288	V[0x6] = 0x28
0x028a	V[0x7] = 0x7
0x028c	V[0x4] = 0x28
0x028e	V[0x5] = 0xc
0x0290	V[0x2] = 0x16
0x0292	V[0x3] = 0x11
0x0294	PC = stack.pop()
0x0296	V[0x6] = 0x28
0x0298	V[0x7] = 0x7
0x029a	V[0x4] = 0x28
0x029c	V[0x5] = 0xe
0x029e	V[0x2] = 0x16
0x02a0	V[0x3] = 0x14
0x02a2	PC = stack.pop()
0x02a4	V[0x6] = 0x28
0x02a6	V[0x7] = 0x5
0x02a8	V[0x4] = 0x28
0x02aa	V[0x5] = 0x10
0x02ac	V[0x2] = 0x16
0x02ae	V[0x3] = 0xb
0x02b0	PC = stack.pop()
0x02b2	I = 0x359
0x02b4	draw_sprite(0x6, 0x7, 0x2)
0x02b6	V[0x6] = (V[0x6] + 0xfe) & 0xFF
0x02b8	draw_sprite(0x6, 0x7, 0x2)
0x02ba	PC += 2 if V[0x4] != 0x0 else 0
0x02bc	PC = stack.pop()
0x02be	I = 0x357
0x02c0	draw_sprite(0x4, 0x5, 0x2)
0x02c2	V[0x4] = (V[0x4] + 0x2) & 0xFF
0x02c4	PC += 2 if V[0x4] != 0x44 else 0
0x02c6	V[0x4] = (V[0x4] + 0xc0) & 0xFF
0x02c8	draw_sprite(0x4, 0x5, 0x2)
0x02ca	PC += 2 if V[0x2] != 0x00 else 0
0x02cc	PC = stack.pop()
0x02ce	I = 0x35b
0x02d0	draw_sprite(0x2, 0x3, 0x2)
0x02d2	V[0x2] = (V[0x2] + 0x2) & 0xFF
0x02d4	PC += 2 if V[0xc] != 0x4 else 0
0x02d6	V[0x2] = (V[0x2] + 0x2) & 0xFF
0x02d8	PC += 2 if V[0xc] != 0x5 else 0
0x02da	V[0x2] = (V[0x2] + 0x2) & 0xFF
0x02dc	PC += 2 if V[0x2] != 0x44 else 0
0x02de	V[0x2] = (V[0x2] + 0xc0) & 0xFF
0x02e0	draw_sprite(0x2, 0x3, 0x2)
0x02e2	PC = stack.pop()
0x02e4	V[0xc] = (V[0xc] + 0x1) & 0xFF
0x02e6	V[0xd] = 0x0
0x02e8	V[0xe] = 0x2
0x02ea	display.clear()
0x02ec	PC += 2 if V[0xc] != 0x6 else 0
0x02ee	V[0xc] = 0x1
0x02f0	V[0xa] = 0x0
0x02f2	PC = 0x20a
0x02f4	V[0x0] = 0x6
0x02f6	ST = V[0x0]
0x02f8	V[0xb] = (V[0xb] + 0xff) & 0xFF
0x02fa	PC += 2 if V[0xb] != 0x00 else 0
0x02fc	PC = 0x308
0x02fe	V[0xd] = 0x0
0x0300	V[0xe] = 0x2
0x0302	display.clear()
0x0304	V[0xa] = 0x0
0x0306	PC = 0x20a
0x0308	PC = 0x308
0x030a	PC += 2 if V[0xa] != 0x1 else 0
0x030c	PC = stack.pop()
0x030e	V[0x0] = 0x2
0x0310	ST = V[0x0]
0x0312	V[0xa] = 0x1
0x0314	V[0x8] = V[0xd]
0x0316	V[0x8] = (V[0x8] + 0x1) & 0xFF
0x0318	V[0x9] = V[0xe]
0x031a	V[0x9] = (V[0x9] + 0x1) & 0xFF
0x031c	draw_sprite(0x8, 0x9, 0x1)
0x031e	PC = stack.pop()
0x0320	I = 0x354
0x0322	draw_sprite(0xd, 0xe, 0x2)
0x0324	PC = stack.pop()
0x0326	V[0x4] = 0x19
0x0328	V[0x3] = 0x0
0x032a	I = 0x356
0x032c	draw_sprite(0x3, 0x4, 0x1)
0x032e	V[0x3] = (V[0x3] + 0x8) & 0xFF
0x0330	PC += 2 if V[0x3] == 0x40 else 0
0x0332	PC = 0x32c
0x0334	V[0x3] = 0x1e
0x0336	V[0x4] = 0x1b
0x0338	I = (V[0xc] & 0x0F) * 5
0x033a	draw_sprite(0x3, 0x4, 0x5)
0x033c	PC += 2 if V[0xb] != 0x4 else 0
0x033e	I = 0x35f
0x0340	PC += 2 if V[0xb] != 0x3 else 0
0x0342	I = 0x360
0x0344	PC += 2 if V[0xb] != 0x2 else 0
0x0346	I = 0x361
0x0348	PC += 2 if V[0xb] != 0x1 else 0
0x034a	I = 0x362
0x034c	V[0x3] = 0x1
0x034e	V[0x4] = (V[0x4] + 0x2) & 0xFF
0x0350	draw_sprite(0x3, 0x4, 0x1)
0x0352	PC = stack.pop()
0x0354	DB 0x80
0x0355	DB 0xf8
0x0356	DB 0xff
0x0357	DB 0x80
0x0358	DB 0xe0
0x0359	DB 0x10
0x035a	DB 0x70
0x035b	DB 0x88
0x035c	DB 0xee
0x035d	DB 0x11
0x035e	DB 0x77
0x035f	DB 0xaa
0x0360	DB 0xa8
0x0361	DB 0xa0
0x0362	DB 0x80
0x0363	DB 0x00
